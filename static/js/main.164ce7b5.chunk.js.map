{"version":3,"sources":["store/actions/types.js","store/reducers/tickerReducer.js","store/reducers/index.js","store/store.js","store/actions/pairActions.js","components/ExchangeList.js","components/Ticker.js","App.js","index.js"],"names":["ACTION_TYPE","FETCH_EXCHANGE_LIST","SELECT_PAIR","SET_TICKER_DATA","initialState","items","selected_pair","ticker_data","combineReducers","ticker","state","action","type","payload","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","setTickerData","pair","dispatch","connect","exchangeList","selectedPair","fetchExchangeList","lists","fetch","then","res","json","console","log","catch","err","selectPair","props","useState","search","setSearch","className","name","placeholder","value","onChange","e","target","toUpperCase","filter","ele","includes","map","item","onClick","symbol","src","length","slice","split","width","redStyle","color","greenStyle","ws","WebSocket","tickerData","isSocketConnected","setIsSocketConnected","useEffect","msg","JSON","stringify","event","channel","onopen","send","handleSocketDisconnect","channelSubscribe","handleSocketConnect","a","close","onclose","onmessage","message","data","parse","LastPrice","Vol","High","Low","DailyChange","DailyChangeRelative","style","margin","Math","abs","toFixed","class","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.164ce7b5.chunk.js","sourcesContent":["const ACTION_TYPE = {\n    FETCH_EXCHANGE_LIST : \"FETCH_EXCHANGE_LIST\",\n    SELECT_PAIR : \"SELECT_PAIR\",\n    SET_TICKER_DATA : \"SET_TICKER_DATA\"\n}\n\n\nexport default ACTION_TYPE;","import ACTION_TYPE from '../actions/types';\n\nconst initialState = {\n  items: ['1INCH:USD','1INCH:UST',\"AAABBB\",'AAVE:USD','AAVE:UST','ADABTC','ADAUSD','ADAUST','AIXUSD','AIXUST','ALBT:USD','ALBT:UST','ALGBTC','ALGUSD','ALGUST','AMPBTC','AMPUSD','AMPUST','ANCUSD','ANCUST','ANTBTC','ANTETH','ANTUSD','ATOBTC','ATOETH','ATOUSD','ATOUST','AVAX:BTC','AVAX:USD','AVAX:UST','AXSUSD','AXSUST','B21X:USD','B21X:UST','BALUSD','BALUST','BAND:USD','BAND:UST','BATBTC','BATETH','BATUSD','BATUST','BCHABC:USD','BCHN:USD','BEST:USD','BFTUSD','BMIUSD','BMIUST','BNTUSD','BOBA:USD','BOBA:UST','BOSON:USD','BOSON:UST','BSVBTC','BSVUSD','BTC:CNHT','BTC:XAUT','BTCEUR','BTCEUT','BTCGBP','BTCJPY','BTCMIM','BTCUSD','BTCUST','BTCXCH','BTGBTC','BTGUSD','BTSE:USD','BTTUSD','CELUSD','CELUST','CHEX:USD','CHSB:BTC','CHSB:USD','CHSB:UST','CHZUSD','CHZUST','CLOUSD','CNH:CNHT','COMP:USD','COMP:UST','CTKUSD','CTKUST','DAIBTC','DAIETH','DAIUSD','DATBTC','DATUSD','DCRUSD','DGBUSD','DOGBTC','DOGE:BTC','DOGE:USD','DOGE:UST','DOGUSD','DOGUST','DORA:USD','DORA:UST','DOTBTC','DOTUSD','DOTUST','DSHBTC','DSHUSD','DUSK:BTC','DUSK:USD','EDOBTC','EDOETH','EDOUSD','EGLD:USD','EGLD:UST','ENJUSD','EOSBTC','EOSDT:USD','EOSDT:UST','EOSETH','EOSEUR','EOSGBP','EOSJPY','EOSUSD','EOSUST','ESSUSD','ETCBTC','ETCUSD','ETCUST','ETH2X:ETH','ETH2X:USD','ETH2X:UST','ETH:XAUT','ETHBTC','ETHEUR','ETHEUT','ETHGBP','ETHJPY','ETHUSD','ETHUST','ETPBTC','ETPETH','ETPUSD','EURUST','EUSUSD','EUTEUR','EUTUSD','EUTUST','EXOUSD','FCLUSD','FCLUST','FETUSD','FETUST','FILUSD','FILUST','FORTH:USD','FORTH:UST','FTMUSD','FTMUST','FTTUSD','FTTUST','FUNUSD','GNOUSD','GNTUSD','GOTEUR','GOTUSD','GRTUSD','GRTUST','GTXUSD','GTXUST','HEZUSD','HEZUST','HMTUSD','HMTUST','ICEUSD','ICPBTC','ICPUSD','ICPUST','IDXUSD','IDXUST','IOTBTC','IOTETH','IOTEUR','IOTGBP','IOTJPY','IOTUSD','IQXUSD','IQXUST','JASMY:USD','JASMY:UST','JSTBTC','JSTUSD','JSTUST','KANUSD','KANUST','KNCBTC','KNCUSD','KSMUSD','KSMUST','LEOBTC','LEOEOS','LEOETH','LEOUSD','LEOUST','LINK:USD','LINK:UST','LRCUSD','LTCBTC','LTCUSD','LTCUST','LUNA:BTC','LUNA:USD','LUNA:UST','LYMUSD','MATIC:BTC','MATIC:USD','MATIC:UST','MIMUSD','MIMUST','MIRUSD','MIRUST','MKRUSD','MKRUST','MLNUSD','MNABTC','MNAUSD','MOBUSD','MOBUST','NEAR:USD','NEAR:UST','NEOBTC','NEOETH','NEOEUR','NEOGBP','NEOJPY','NEOUSD','NEOUST','NEXO:BTC','NEXO:USD','NEXO:UST','OCEAN:USD','OCEAN:UST','ODEUSD','OMGBTC','OMGETH','OMGUSD','OMNUSD','ORSUSD','OXYUSD','OXYUST','PASUSD','PAXUSD','PAXUST','PLANETS:USD','PLANETS:UST','PLUUSD','PNKETH','PNKUSD','QRDO:USD','QRDO:UST','QSHUSD','QTFBTC','QTFUSD','QTMBTC','QTMUSD','RBTBTC','RBTUSD','REEF:USD','REEF:UST','REPBTC','REPUSD','REQUSD','ROSE:USD','ROSE:UST','RRTUSD','SANBTC','SANETH','SANUSD','SHIB:USD','SHIB:UST','SNTUSD','SNXUSD','SNXUST','SOLBTC','SOLUSD','SOLUST','SPELL:MIM','SPELL:USD','SPELL:UST','STJUSD','SUKU:USD','SUKU:UST','SUNUSD','SUNUST','SUSHI:USD','SUSHI:UST','TERRAUST:USD','TERRAUST:UST','TESTBTC:TESTUSD','TESTBTC:TESTUSDT','TLOS:USD','TLOS:UST','TRXBTC','TRXETH','TRXEUR','TRXUSD','TRXUST','TSDUSD','TSDUST','UDCUSD','UDCUST','UNIUSD','UNIUST','UOPUSD','UOPUST','UOSBTC','UOSUSD','UST:CNHT','USTUSD','UTKUSD','VEEUSD','VELO:USD','VELO:UST','VETBTC','VETUSD','VETUST','VSYBTC','VSYUSD','WAVES:USD','WAVES:UST','WAXUSD','WBTUSD','WNCG:USD','WNCG:UST','XAUT:BTC','XAUT:USD','XAUT:UST','XCHUSD','XDCUSD','XDCUST','XLMBTC','XLMETH','XLMUSD','XLMUST','XMRBTC','XMRUSD','XMRUST','XRAUSD','XRDBTC','XRDUSD','XRPBTC','XRPUSD','XRPUST','XSNUSD','XTZBTC','XTZUSD','XTZUST','XVGUSD','YFIUSD','YFIUST','YGGUSD','ZCNUSD','ZECBTC','ZECUSD','ZILBTC','ZILUSD','ZRXBTC','ZRXETH','ZRXUSD'],\n  selected_pair: 'BTCUSD',\n  ticker_data: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case ACTION_TYPE.FETCH_EXCHANGE_LIST:\n      return {\n        ...state,\n        items: action.payload\n      };\n    case ACTION_TYPE.SELECT_PAIR:\n      return {\n        ...state,\n        selected_pair: action.payload\n      };\n    case ACTION_TYPE.SET_TICKER_DATA:\n      return {\n        ...state,\n        ticker_data: action.payload\n      };\n    default:\n      return state;\n  }\n}","import { combineReducers } from \"redux\";\nimport tickerReducer from \"./tickerReducer\";\n\n\nexport default combineReducers({\n    ticker: tickerReducer\n  });","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/index'\n\nconst initialState = {}\n\n\nconst middleware = [thunk]\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n        applyMiddleware(...middleware),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n      )\n)\n\nexport default store;","import ACTION_TYPE from './types';\n\nexport const fetchExchangeList = lists => dispatch => {\n  //Used a heroku proxy server as the api was throwing cors error but to maeke this run, needs permission from https://cors-anywhere.herokuapp.com/corsdemo for evry system. So now i hardcoded the list \n  fetch('https://cors-anywhere.herokuapp.com/https://api-pub.bitfinex.com/v2/conf/pub:list:pair:exchange')\n    .then(res => res.json())\n    .then(lists =>\n        {console.log(lists)\n        dispatch({\n            type: ACTION_TYPE.FETCH_EXCHANGE_LIST,\n            payload: lists[0]\n        })}\n    ).catch(err=> console.log(err));\n};\n\nexport const selectPair = pair => dispatch => {\n    console.log(pair,\"redux\")\n    dispatch({\n        type: ACTION_TYPE.SELECT_PAIR,\n        payload: pair\n    })\n};\n\nexport const setTickerData = pair => dispatch => {\n    \n    dispatch({\n        type: ACTION_TYPE.SET_TICKER_DATA,\n        payload: pair\n    })\n};","import React,{ useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types';\nimport { fetchExchangeList, selectPair, setTickerData } from '../store/actions/pairActions'\n\n\nexport const ExchangeList = (props) => {\n    const [search, setSearch] = useState('')\n\n    //the below commented code is for fetching list from api but api is throwing \"cors\" error\n    //and successfully did with proxy but for every different sysytem after some time needs to take permission\n    //so hardcoded the list\n\n\n    // useEffect(() => {\n    //     // props.fetchExchangeList()\n    // }, [])\n\n\n    const handleListItemClick = (symbol) => {\n        // console.log(\"clicked\")\n        props.selectPair(symbol)\n        props.setTickerData({})\n        setSearch(\"\")\n    }\n\n\n    return (\n        <div className=\"list-search\">\n            <input\n                type=\"text\"\n                name=\"search\"\n                placeholder=\"&#xF002; Search...\"\n                value={search}\n                onChange={(e)=>setSearch(e.target.value.toUpperCase())}\n            />\n            <table >\n                {props.exchangeList && props.exchangeList.filter(ele => ele.includes(search)).map(item=>(\n                    <tr key={item} onClick={()=>handleListItemClick(item)}>\n                        <td><img src={`https://static.bitfinex.com/images/icons/${item.length ===6 ? item.slice(0,3):item.split(\":\")[0]}-alt.svg`} width=\"26px\" /></td>\n                        <td>{item}</td>\n                    </tr>\n                ))}\n            </table>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    exchangeList: state.ticker.items,\n    selectedPair: state.ticker.selected_pair\n})\n\nExchangeList.propTypes = {\n    selectPair: PropTypes.func.isRequired,\n    fetchExchangeList: PropTypes.func.isRequired,\n    setTickerData: PropTypes.func.isRequired,\n    selectedPair: PropTypes.string\n  };\n\nexport default connect(mapStateToProps, { fetchExchangeList, selectPair, setTickerData })(ExchangeList)\n\n","import React,{ useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { setTickerData } from '../store/actions/pairActions'\nimport PropTypes from 'prop-types';\n\nconst redStyle = {\n    color:\"rgb(228,74,67)\"\n}\nconst greenStyle = {\n    color:\"rgb(0,166,129)\"\n}\nconst textStyle = {\n    color:\"rgb(255,255,255)\"\n}\n\nlet ws = new WebSocket('ws://api-pub.bitfinex.com/ws/2');\n\nexport const Ticker = (props) => {\n    const [isSocketConnected, setIsSocketConnected] = useState(true)\n    \n      useEffect(() => {        \n        let msg = JSON.stringify({ \n          event: 'subscribe', \n          channel: 'ticker', \n          symbol: `tBTCUSD` \n        })\n        ws.onopen = () => {\n          console.log('WebSocket client Connected');\n          ws.send(msg)\n        };\n        return () => {\n          handleSocketDisconnect()\n        }\n      }, [])\n\n      useEffect(() => {\n        \n        channelSubscribe()\n        \n        return () => {\n            handleSocketDisconnect()\n        }\n      }, [props.selected_pair])\n\n\n\n      const channelSubscribe = () => {\n        let msg = JSON.stringify({ \n            event: 'subscribe', \n            channel: 'ticker', \n            symbol: `t${props.selectedPair}` \n          })\n          ws.onopen = () => {\n            ws.send(msg)\n            console.log('WebSocket client Connected');\n            setIsSocketConnected(true)\n          };\n      }\n\n      const handleSocketConnect = async() => {\n        let msg = JSON.stringify({ \n            event: 'subscribe', \n            channel: 'ticker', \n            symbol: `t${props.selectedPair}` \n          })\n        ws = await new WebSocket('ws://api-pub.bitfinex.com/ws/2');\n        ws.onopen = () => {\n            ws.send(msg)\n            console.log('WebSocket client Connected');\n            setIsSocketConnected(true)\n          };\n      }\n\n      const handleSocketDisconnect = () => {\n          setIsSocketConnected(false)\n        ws.close(1000,\"Work complete\")\n        ws.onclose = () => {\n            props.setTickerData({})\n            console.log('WebSocket client Disconnected')\n          }\n      }\n    \n      ws.onmessage = (message) => {\n        // console.log(message.data,\"see\",typeof(message.data));\n        if (typeof(message.data)===\"string\"){\n          let data = JSON.parse(message.data)\n          if (typeof(data[1])===\"object\"){\n            props.setTickerData({\n              LastPrice: data[1][6],\n              Vol: data[1][7],\n              High: data[1][8],\n              Low: data[1][9],\n              DailyChange: data[1][4],\n              DailyChangeRelative: data[1][5]\n            })\n          }\n          \n        }  \n      };\n\n      ws.onclose = () => {\n        props.setTickerData({})\n        console.log('WebSocket client Disconnected')\n      }\n\n\n    return (\n        <div style={{width:\"fit-content\",margin:\"0 auto\"}}>\n            {isSocketConnected ? (\n                <button onClick={handleSocketDisconnect}>Disconnect Socket</button>\n            ):(\n                <button onClick={handleSocketConnect}>Connect Socket</button>\n            )}\n            <div className=\"ticker-container\">\n                <div className=\"dc1\">\n                    <img src={`https://static.bitfinex.com/images/icons/${props.selectedPair.length ===6 ? props.selectedPair.slice(0,3):props.selectedPair.split(\":\")[0]}-alt.svg`} className=\"image-width\" />\n                </div>\n                <div className=\"dc2\">\n                    <div className=\"dd1 ddl\">{props.selectedPair.length ===6 ? props.selectedPair.slice(0,3)+\"/\"+props.selectedPair.slice(3):props.selectedPair.split(\":\")[0]+\"/\"+props.selectedPair.split(\":\")[1]}</div>\n                    <div className=\"dd2 ddl\">\n                        <span className=\"grey-text\">VOL</span> {props.tickerData.Vol && Math.abs(props.tickerData.Vol.toFixed(2))}\n                    </div>\n                    <div className=\"dd3 ddl\">\n                        <span className=\"grey-text\">HIGH</span> {props.tickerData.High && Math.abs(props.tickerData.High.toFixed(2))}\n                    </div>\n                </div>\n                <div className=\"dc3\">\n                    <div className=\"dd1 ddr\">{props.tickerData.LastPrice ? Math.abs(props.tickerData.LastPrice.toFixed(2)): (isSocketConnected ? \"loading..\" : \"Not Connected\")}</div>\n                    <div className=\"dd2 ddr\" style={(props.tickerData.DailyChange<0) ? redStyle : greenStyle}>\n                        {Math.abs(props.tickerData.DailyChange?.toFixed(2))}{(props.tickerData.DailyChange<0)?<i class=\"fa fa-caret-down fa-fw\"/>:<i class=\"fas fa-caret-up fa-fw\"/>}({Math.abs(props.tickerData.DailyChangeRelative*100).toFixed(2)}%)\n                    </div>\n                    <div className=\"dd3 ddr\">\n                        <span className=\"grey-text\">LOW</span> {props.tickerData.Low && Math.abs(props.tickerData.Low.toFixed(2))}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nTicker.propTypes = {\n    setTickerData: PropTypes.func.isRequired,\n    pairList: PropTypes.array.isRequired,\n    selectedPair: PropTypes.string,\n    tickerData: PropTypes.object\n  };\n\nconst mapStateToProps = (state) => ({\n    exchangeList: state.ticker.items,\n    selectedPair: state.ticker.selected_pair,\n    tickerData: state.ticker.ticker_data\n})\n\n\nexport default connect(mapStateToProps, { setTickerData })(Ticker)\n\n","import './App.css';\nimport React,{ useState, useEffect } from 'react';\nimport { Provider } from 'react-redux'\nimport store from './store/store'\nimport ExchangeList from './components/ExchangeList';\nimport Ticker  from './components/Ticker';\n\n\nfunction App() {\n  \n\n  return (\n    <Provider store={store} >\n      <div className=\"App\">\n        <h1>SOLU TICKER</h1>\n        <Ticker />\n        <ExchangeList />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}